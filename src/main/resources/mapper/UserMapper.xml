<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yqg.mapper.UserMapper">
    <select id="getUserByAccount" resultType="com.yqg.vo.User">
        select * from user where user_name = #{account}
        or user_id = #{account} or email = #{account}
    </select>
    <select id="checkUserStatus" resultType="long">
        select status from user
        where user_id = #{userId}
    </select>
    <insert id="addUserOne" parameterType="com.yqg.vo.User" useGeneratedKeys="true" keyProperty="userId">
        insert into user(user_id,user_name,user_avatar_url,password,status,email,role_id,
                         create_time,login_times,integral)
        values(#{userId},#{userName},#{userAvatarUrl},#{password},#{status}
              ,#{email},#{roleId},#{createTime},#{loginTimes},#{integral});
    </insert>
    <update id="updateUserStatus" flushCache="true" timeout="20">
        update user
        set status = #{status}
        where user_id = #{userId}
    </update>
    <update id="updateUserLoginTimes" flushCache="true" timeout="20">
        update user
        set login_times = login_times + 1
        where user_id = #{userId}
    </update>
    <select id="getAllUser" resultType="com.yqg.vo.User">
        select * from user
    </select>
    <delete id="deleteUser" flushCache="true" timeout="20" parameterType="string">
        delete from user
        where user_id = #{userId}
    </delete>
    <update id="updateUser" parameterType="com.yqg.vo.User">
        UPDATE
        user
        <set>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="userAvatarUrl != null">user_avatar_url = #{userAvatarUrl},</if>
            <if test="password != null">password = #{password},</if>
            <if test="userDes != null">user_des = #{userDes},</if>
            <if test="userExp != null">user_exp = #{userExp},</if>
            <if test="userTags != null">user_tags = #{userTags},</if>
            <if test="status != null">status = #{status},</if>
            <if test="email != null">email = #{email},</if>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="loginTimes != null">login_times = #{loginTimes},</if>
            <if test="integral != null">integral = #{integral},</if>
        </set>
        WHERE user_id = #{userId}
    </update>

    <select id="getHotUser" resultType="com.yqg.vo.HotUser">
        SELECT u.user_id,
               u.user_name,
               u.user_avatar_url,
               u.user_des,
               u.user_level,
               COUNT(a.article_id)                                                         AS article_count,
               SUM(a.like_count)                                                           AS like_count_sum,
               SUM(a.read_count)                                                           AS read_count_sum,
               SUM(a.comment_count)                                                        AS comment_count_sum,
               ((COUNT(a.article_id) * 5) + (SUM(a.like_count) * 3.5) + (SUM(a.comment_count) * 2) +
                (SUM(a.read_count) * 0.5) + (u.user_exp * 0.0001) + (u.login_times * 0.5)) AS hot_score
        FROM db_yqg.user u
                 LEFT JOIN db_yqg.article a ON u.user_id = a.user_id
        GROUP BY u.user_id,
                 u.user_name,
                 u.user_avatar_url,
                 u.user_des,
                 u.user_level
        ORDER BY hot_score DESC LIMIT 3;
    </select>

    <select id="getUserByKeyword" resultMap="searchUserMap">
        SELECT * FROM user
        WHERE user_name LIKE CONCAT('%',#{keyword},'%')
    </select>

    <resultMap id="searchUserMap" type="com.yqg.vo.User">
        <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="userAvatarUrl" column="user_avatar_url"/>
        <result property="userDes" column="user_des"/>
        <result property="userLevel" column="user_level"/>
        <result property="userExp" column="user_exp"/>
        <result property="userTags" column="user_tags"/>
        <result property="status" column="status"/>
    </resultMap>

</mapper>